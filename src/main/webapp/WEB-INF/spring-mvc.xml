<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 开启controller注解支持
     在springMVC配置文件中将Service注解给去掉-->
    <context:component-scan base-package="com.freetax"
                            use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:fallbackToSystemLocale="true" p:useCodeAsDefaultMessage="false"
          p:defaultEncoding="UTF-8">
        <description>Base message source toid handle internationalization</description>
        <!--<property name="basenames">  -->
        <!--<list>  -->
        <!--&lt;!&ndash; main resources &ndash;&gt;  -->
        <!--<value>classpath:message/main</value>  -->
        <!--</list>  -->
        <!--</property>  -->
    </bean>
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageCOnverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>

            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/json;charset=UTF-8</value>
                        <value>text/*;charset=UTF-8</value>
                        <value>*/*</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--<mvc:resources mapping="/**" location="/"/>-->
    <mvc:resources mapping="/swagger/**" location="/swagger-ui/"/>

    <mvc:default-servlet-handler/>
    <!-- CSRF
    <bean name="requestDataValueProcessor" class="com.movision.security.csrf.CSRFRequestDataValueProcessor"/>
    <mvc:interceptors>
        <bean class="com.movision.security.csrf.CSRFHandlerInterceptor"/>
    </mvc:interceptors>-->

    <context:property-placeholder
            ignore-unresolvable="true" location="classpath*:/spring/application.properties,
                classpath*:web/message.properties,classpath*:web/config.properties,
                classpath*:web/pay.properties"/>

    <!--视图解释器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean
                        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                            <value>text/html;charset=UTF-8</value>
                            <value>text/plain;charset=UTF-8</value>
                            <value>text/json;charset=UTF-8</value>
                            <value>text/*;charset=UTF-8</value>
                            <value>*/*</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!--用于上传文件
          maxUploadSize：设置允许上传的最大文件大小，以字节为单位计算, 500M
          maxInMemorySize：设置在文件上传时允许写到内存中的最大值, 40Kb-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:maxUploadSize="512000000"
          p:maxInMemorySize="1"
          p:defaultEncoding="UTF-8"/>


    <!-- json配置 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager">
            <bean
                    class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"
                    p:favorPathExtension="true" p:favorParameter="false"
                    p:parameterName="format" p:ignoreAcceptHeader="true"
                    p:defaultContentType="text/html">
                <property name="mediaTypes">
                    <map>
                        <entry key="plain" value="text/plain"/>
                        <entry key="html" value="text/html"/>
                        <entry key="pdf" value="application/pdf"/>
                        <entry key="json" value="application/json"/>
                        <entry key="xml" value="application/xml"/>
                        <entry key="xls" value="application/vnd.ms-excel"/>
                        <entry key="xlsx" value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"/>
                    </map>
                </property>
            </bean>
        </property>
        <property name="defaultViews">
            <list>
                <ref bean="mappingJacksonJsonView"/>
                <ref bean="marshallingView"/>
                <ref bean="xlsExcelView"/>
                <ref bean="xlsxExcelView"/>
            </list>
        </property>
    </bean>
    <bean id="marshallingView"
          class="org.springframework.web.servlet.view.xml.MarshallingView">
        <property name="marshaller">
            <bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
        </property>
    </bean>
    <bean id="mappingJacksonJsonView"
          class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <bean id="xlsExcelView" class="com.freetax.common.view.XlsExcelView">
    </bean>
    <bean id="xlsxExcelView" class="com.freetax.common.view.XlsxExcelView">
    </bean>

    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>

    <!-- resubmit token拦截器
    <mvc:interceptors>
       <bean class="com.movision.security.resubmit.TokenInterceptor"/>
        <bean class="com.movision.security.resubmit.AvoidDuplicateSubmissionInterceptor"/>
    </mvc:interceptors>-->

    <mvc:interceptors>
        <!--<bean class="com.movision.aop.TimeoutInterceptor"/>-->
        <bean class="com.freetax.aop.InitLoginMemberInterceptor"/>
        <!--<bean class="com.movision.aop.UserAccessInterceptor"/>-->
    </mvc:interceptors>


    <!--AOP-->
    <aop:config proxy-target-class="true"/>

    <!--swagger-->
    <bean id="apiConfig" class="com.freetax.common.util.SwaggerConfig"/>
</beans>
